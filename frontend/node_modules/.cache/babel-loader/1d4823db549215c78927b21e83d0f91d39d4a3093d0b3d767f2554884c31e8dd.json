{"ast":null,"code":"var _jsxFileName = \"/Users/adrian-dero/Documents/School/DBI/wishlist/frontend/src/components/WishlistList/ItemList.js\";\nimport React from \"react\";\nimport { List, ListItem, ListItemText, ListItemSecondaryAction, IconButton, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, TextField } from \"@mui/material\";\nimport { Link, Route, useNavigate } from \"react-router-dom\";\nimport { deleteWishlist, getAllWishlists, getOneWishlist } from \"../../api/wishlistApi.js\";\nimport DeleteIcon from \"./Trash_font_awesome.svg.png\";\nimport UpdateDialog from \"./UpdateDialog.js\";\nimport PostDialog from \"./PostDialog.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = \"http://localhost:8000/api\";\nclass ItemList extends React.Component {\n  // Fetch item details based on itemId, or use it as needed\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n  componentDidMount() {\n    getAllWishlists().then(result => {\n      this.setState({\n        data: result\n      });\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: [/*#__PURE__*/_jsxDEV(PostDialog, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: this.state.data ? this.state.data.map(item => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: item.currentprice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this)]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 3,\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n    // <List>\n    //   {items.map((item) => (\n    //     <ListItem key={item.id}>\n    //       <ListItemText\n    //         primary={`${item.firstname} ${item.lastname} | ${item.year}`}\n    //         // Add more ListItemText properties as needed\n    //       />\n    //       <ListItemSecondaryAction>\n    //         <IconButton\n    //           edge=\"end\"\n    //           aria-label=\"delete\"\n    //           onClick={() => handleDelete(item.id)}\n    //         >\n    //           <DeleteIcon />\n    //         </IconButton>\n    //       </ListItemSecondaryAction>\n    //     </ListItem>\n    //   ))}\n    // </List>\n    ;\n  }\n}\n\nexport default ItemList;","map":{"version":3,"names":["React","List","ListItem","ListItemText","ListItemSecondaryAction","IconButton","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","TextField","Link","Route","useNavigate","deleteWishlist","getAllWishlists","getOneWishlist","DeleteIcon","UpdateDialog","PostDialog","jsxDEV","_jsxDEV","url","ItemList","Component","constructor","props","state","data","componentDidMount","then","result","setState","render","component","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","name","currentprice","_id","colSpan"],"sources":["/Users/adrian-dero/Documents/School/DBI/wishlist/frontend/src/components/WishlistList/ItemList.js"],"sourcesContent":["import React from \"react\";\nimport {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  TextField,\n} from \"@mui/material\";\nimport { Link, Route, useNavigate } from \"react-router-dom\";\nimport {\n  deleteWishlist,\n  getAllWishlists,\n  getOneWishlist,\n} from \"../../api/wishlistApi.js\";\nimport DeleteIcon from \"./Trash_font_awesome.svg.png\";\nimport UpdateDialog from \"./UpdateDialog.js\";\nimport PostDialog from \"./PostDialog.js\";\n\nconst url = \"http://localhost:8000/api\";\n\nclass ItemList extends React.Component {\n  // Fetch item details based on itemId, or use it as needed\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n  }\n\n  componentDidMount() {\n\n      getAllWishlists().then((result) => {\n        this.setState({ data: result });\n      });\n\n\n  }\n\n  render() {\n    return (\n      <TableContainer component={Paper}>\n        <PostDialog />\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>price</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.data ? (\n              this.state.data.map((item) => (\n                <TableRow key={item._id}>\n                  <TableCell>{item.name}</TableCell>\n                  <TableCell>{item.currentprice}</TableCell>\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell colSpan={3}>Loading...</TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      // <List>\n      //   {items.map((item) => (\n      //     <ListItem key={item.id}>\n      //       <ListItemText\n      //         primary={`${item.firstname} ${item.lastname} | ${item.year}`}\n      //         // Add more ListItemText properties as needed\n      //       />\n      //       <ListItemSecondaryAction>\n      //         <IconButton\n      //           edge=\"end\"\n      //           aria-label=\"delete\"\n      //           onClick={() => handleDelete(item.id)}\n      //         >\n      //           <DeleteIcon />\n      //         </IconButton>\n      //       </ListItemSecondaryAction>\n      //     </ListItem>\n      //   ))}\n      // </List>\n    );\n  }\n}\n\nexport default ItemList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}